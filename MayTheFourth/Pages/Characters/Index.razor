@page "characters"
@inject CharacterService Service

<PageTitle>Personagens</PageTitle>

<h3>Personagens</h3>

<div class="container-fluid mt-4">
    @if(_pagedResult is null)
    {
        <p class="text-center">
            <em>Carregando os personagens...</em>
        </p>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-bordered table-striped">
                <thead>
                    <tr class="text-center">
                        <th scope="col">Nome</th>
                        <th scope="col">Peso</th>
                        <th scope="col">Altura</th>
                        <th scope="col">Aniversário</th>
                        <th scope="col">Gênero</th>
                        <th scope="col">Detalhes</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var character in _pagedResult.Result)
                {
                    <tr>
                        <th scope="row" class="text-left align-middle">@character.Name</th>
                        <td class="text-center align-middle">@character.Mass</td>
                        <td class="text-center align-middle">@character.Height</td>
                        <td class="text-center align-middle">@character.BirthYear</td>
                        @if(@character.Gender.Equals("male")) {
                            <td class="text-center align-middle">Masculino</td>
                        }
                        else
                        {
                            <td class="text-center align-middle">Feminino</td>
                        }
                        <td class="text-center align-middle">
                            <a href="/">
                                <i class="fa-solid fa-magnifying-glass" title="Mais Informações"></i>
                            </a>
                        </td>
                    </tr>
                }
                </tbody>
                <tfoot>
                <tr>
                    <td colspan="7">
                        <div class="d-flex align-items-center justify-content-end gap-2">
                            <span class="flex-grow-1">Mostrando @_pageSize de @_pagedResult.Total itens</span>
                            <div class="d-flex align-items-center gap-2">
                                <label for="pageSize">Itens por página:</label>
                                <select class="form-select form-select-sm" style="width: 64px" id="pageSize" @onchange="UpdatePageSize">
                                    <option value="5">5</option>
                                    <option value="10">10</option>
                                    <option value="15">15</option>
                                </select>
                            </div>
                            <button class="pagination-button" disabled="@(_currentPage == 1)" @onclick="PreviousPage">
                                <i class="fa-solid fa-circle-arrow-left"></i>
                            </button>
                            <span>Página @_currentPage de @_pagedResult.TotalPages</span>
                            <button class="pagination-button" disabled="@(_currentPage == _pagedResult.TotalPages)" @onclick="NextPage">
                                <i class="fa-solid fa-circle-arrow-right"></i>
                            </button>
                        </div>
                    </td>
                </tr>
                </tfoot>
            </table>
        </div>
    }
</div>

@code {
    private PagedResult<Character>? _pagedResult;
    private int _currentPage = 1;
    private int _pageSize = 5;

    protected override async Task OnInitializedAsync()
    {
        await GetCharactersAsync();
    }

    private async Task GetCharactersAsync()
    {
        _pagedResult = await Service.GetAllAsync(_currentPage, _pageSize);
    }

    private async Task PreviousPage()
    {
        if (_currentPage > 1)
        {
            _currentPage--;
            await GetCharactersAsync();
        }
    }

    private async Task NextPage()
    {
        if (_pagedResult != null && _currentPage < _pagedResult.TotalPages)
        {
            _currentPage++;
            await GetCharactersAsync();
        }
    }

    private async Task UpdatePageSize(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out var newSize))
        {
            _pageSize = newSize;
            _currentPage = 1;
            await GetCharactersAsync();
        }
    }
}
